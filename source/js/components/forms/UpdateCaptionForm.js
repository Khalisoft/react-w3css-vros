/* global caption */

import React, {Component, PropTypes} from 'react';
import {bindActionCreators} from 'redux';
import {connect} from 'react-redux';
import {Field, reduxForm} from 'redux-form';

import {updateImageCaption} from '../../actions/form.actions';
import {closeModal} from '../../actions/modal.actions';

class UpdateCaptionForm extends Component {
    constructor(props) {
        super(props);

        this.updateCaptionHandler = this.updateCaptionHandler.bind(this);
    }

    // 'caption' is the form field value generated by redux-form on submit
    updateCaptionHandler({caption}) {
        const {item, galleryType, updateImageCaption} = this.props;

        this.props.updateImageCaption(caption, item._id, galleryType);
    }

    render() {
        const {handleSubmit, pristine, submitting, closeModal} = this.props;

        return (
            <form onSubmit={handleSubmit(this.updateCaptionHandler)} className="update-caption-form w3-container">
                <div>
                    <label className="w3-label" htmlFor="filename">Filename:</label>
                    <Field name="filename" component="input" type="text" id="filename" className="w3-input" disabled />
                </div>
                <br/>
                <div>
                    <label className="w3-label" htmlFor="caption">Caption:</label>
                    <Field name="caption" component="input" type="text" id="caption" className="w3-input" />
                </div>
                <br/>
                <div className="w3-bar w3-right-align" role="group" aria-label="button group">
                    <button type="submit" className="w3-button w3-blue" disabled={pristine || submitting}>Save</button>
                    <button onClick={closeModal} type="button" className="w3-button w3-red">Cancel</button>
                </div>
            </form>
        );
    }
}

UpdateCaptionForm.propTypes = {
    handleSubmit: PropTypes.func.isRequired,
    pristine: PropTypes.bool.isRequired,
    closeModal: PropTypes.func.isRequired,
    submitting: PropTypes.bool.isRequired,
    updateImageCaption: PropTypes.func.isRequired
};

const mapStateToProps = (state) => {
    return {
        initialValues: state.modal.item
    };
};

function mapDispatchToProps(dispatch) {
    return bindActionCreators({updateImageCaption, closeModal}, dispatch);
}

export default connect(mapStateToProps, mapDispatchToProps)(reduxForm({
    form: 'update-caption-form',
    enableReinitialize : true
})(UpdateCaptionForm));
